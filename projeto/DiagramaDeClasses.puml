@startuml
skinparam classAttributeIconSize 0
skinparam classFontSize 14
skinparam classFontColor Black
skinparam shadowing true
skinparam linetype ortho
skinparam classBackgroundColor White
skinparam classBorderColor Black
skinparam classBorderThickness 1
skinparam classHeaderBackgroundColor LightGray
skinparam classHeaderFontColor White
skinparam classAttributeFontSize 12
skinparam classAttributeFontColor Black
skinparam arrowColor Black
skinparam arrowThickness 1
skinparam arrowFontSize 13
skinparam arrowFontColor Black
skinparam nodesep 50
skinparam ranksep 50

enum PedidoStatus {
    PENDENTE
    APROVADO
    REJEITADO
    CANCELADO
}
enum TipoParecer {
    POSITIVO
    NEGATIVO
    AVALIANDO
}

enum ContratoTipo {
    CLIENTE_PROPRIETARIO
    EMPRESA_PROPRIETARIA
    BANCO_PROPRIETARIO
}

abstract class Usuario {
    +login(email: String, senha: String)
    +registrar(email: String, senha: String)
}

class Cliente implements Usuario {
    -RG : String
    -CPF : String
    -Nome : String
    -Endereco : String
    -Profissao : String
    -entidadesEmpregadoras : List<String>
    -rendimentos : List<Double>
    +fazerPedido() : void
    +introduzirPedido(automovel: Automovel) : void
    +modificarPedido(pedido: Pedido) : void
    +consultarPedido(id: int) : Pedido
    +cancelarPedido(id: int) : void
}

class Automovel {
    -Matricula : String
    -Ano : int
    -Marca : String
    -Modelo : String
    -Placa : String
    +introduzirVeiculo() : void
    +modificarVeiculo(veiculo: Veiculo) : void
    +consultarVeiculo(id: int) : Veiculo
    +cancelarVeiculo(id: int) : void
}

class Pedido {
    -ID : int
    -Data : Date
    -Status : PedidoStatus
    -CreditoAssociado : Boolean
    -Cliente : Cliente
    -Automovel : Automovel
    +adicionarAutomovel(automovel: Automovel) : void
    +cancelar() : void
}

class Contrato {
    -ID : int
    -DataInicio : Date
    -DataFim : Date
    -Pedido : Pedido
    -Agente : Agente
    -TipoContrato : ContratoTipo
    -ParecerFinanceiro : TipoParecer
    +gerar() : void
    +executarContrato(pedido: Pedido, agente: Agente) : void
    +gerarContrato(pedido: Pedido, agente: Agente) : Contrato
}
 class Agente implements Usuario {
    -Nome : String
    +consultarBanco() : void
    +avaliarPedido(pedido: Pedido) : Boolean
    +modificarPedido(pedido: Pedido) : void

}

class Banco {
    -Nome : String
    +liberarCredito() : void
}

TipoParecer --- Contrato
PedidoStatus --- Pedido
ContratoTipo --- Contrato
Cliente "1" --> "*" Pedido
Pedido "1" --> "1" Automovel
Pedido "1" --> "*" Contrato
Contrato "1" --> "1" Agente
Agente "1" --> "1" Banco : consulta

@enduml
